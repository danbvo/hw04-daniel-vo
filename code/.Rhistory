}
}
string
string <- na.omit(string)
string
c <- str_detect(string, pattern = "!|~|#|%|&|:")
for (i in 1:length(c)){
if (c[i]==TRUE) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
string
string <- na.omit(string)
string
num_tag <- na.omit(string)
str_match(dat$content, pattern = num_tag)
num_tag
str_match(dat$content, pattern = num_tag[1])
unlist(str_match(dat$content, pattern = num_tag[1]))
str_count(dat$content, pattern = num_tag[1])
mat <- character(length = 40000)
for (i in 1:length(num_tag)){
mat[i] <- str_count(dat$content, pattern = num_tag[i])
}
mat[[i]] <- str_count(dat$content, pattern = num_tag[i])
for (i in 1:length(num_tag)){
mat[[i]] <- str_count(dat$content, pattern = num_tag[i])
}
mat <- character(length = 40000)
for (i in 1:length(num_tag)){
mat[[i]] <- str_count(dat$content, pattern = num_tag[i])
}
str_count(dat$content, pattern = num_tag[i])
for (i in 1:length(num_tag)){
str_count(dat$content, pattern = num_tag[i])
}
str_count(dat$content, pattern = num_tag[i])
str_count(dat$content, pattern = num_tag[1])
str_count(dat$content, pattern = num_tag[4])
num_tag <- na.omit(string)
num_tag
count(num_tag)
sum(num_tag)
class(num_tag)
summary(num_tag)
mat <- matrix("")
mat
mat <- matrix("", nrow = 40000, ncol = 19831)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("/Users/danbvo/Desktop/Academic-Portfolio/Stat-133/HW/hw04/data")
url = "https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/data/text-emotion.csv"
download.file(url, destfile = "text-emotion.csv")
dat <- read.csv(file = "text-emotion.csv")
# number of characters without space
a <- str_replace_all(dat$content, pattern = " |  ", replacement = "")
library(stringr)
library(ggplot2)
library(stringr)
setwd("/Users/danbvo/Desktop/Academic-Portfolio/Stat-133/HW/hw04/data")
url = "https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/data/text-emotion.csv"
download.file(url, destfile = "text-emotion.csv")
dat <- read.csv(file = "text-emotion.csv")
# number of characters without space
a <- str_replace_all(dat$content, pattern = " |  ", replacement = "")
dat$num_char <- as.numeric(str_count(a))
summary(dat$num_char)
ggplot(dat) +
geom_histogram(aes(dat$num_char), binwidth = 5)+
theme_classic()
subset <- unlist(str_split(dat$content, pattern = " "))
subset
a <- str_detect(subset, "\\@")
for (i in 1:length(a)) {
if (a[i]==TRUE) {
string[i] <- paste(subset[i])
}
}
string <- character(length(subset))
for (i in 1:length(a)) {
if (a[i]==TRUE) {
string[i] <- paste(subset[i])
}
}
string
string <- na.omit(string)
string <- character(length(subset))
string[i] <- NA
if (a[i]==TRUE) {
string[i] <- paste(subset[i])
} else {
string[i] <- NA
}
for (i in 1:length(a)) {
if (a[i]==TRUE) {
string[i] <- paste(subset[i])
} else {
string[i] <- NA
}
}
for (i in 1:length(a)) {
if (a[i]==TRUE) {
string[i] <- paste(subset[i])
} else {
string[i] <- NA
}
}
string
string <- na.omit(string)
string
string[i] <- paste(string[i}])
string[i] <- paste(string[i])
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
for (i in 1:length(b)) {
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
for (i in 1:length(b)) {
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
b <- nchar(string)
for (i in 1:length(b)) {
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
string[i] <- NA
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
for (i in 1:length(b)) {
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
string <- na.omit(string)
string
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
for (i in 1:length(b)) {
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
b <- nchar(string)
b
for (i in 1:length(b)) {
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
for (i in 1:length(b)) {
if (b[i]==1) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
string[i] <- paste(string[i])
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
for (i in 1:length(b)) {
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
if (b[i]=1){
for (i in 1:length(b)) {
if (b[i]=1){
length(b)
for (i in 1:length(b)) {
if (b[i]=1){
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
for (i in 1:length(b)) {
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
for (i in 1:length(b)){
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
string <- na.omit(string)
string
c <- str_detect(string, pattern = "!|~|#|%|&")
for (i in 1:length(c)){
if (c[i]==TRUE) {
string[i] <- print(NA)
}
}
string[i] <- paste(string[i])
if (c[i]==TRUE) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
for (i in 1:length(c)){
if (c[i]==TRUE) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
num_tag <- na.omit(string)
num_tag
c <- str_detect(string, pattern = "!|~|#|%|&")
for (i in 1:length(c)){
if (c[i]==TRUE) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
num_tag <- na.omit(string)
num_tag
a <- str_detect(subset, "\\@")
string <- character(length(subset))
for (i in 1:length(a)) {
if (a[i]==TRUE) {
string[i] <- paste(subset[i])
} else {
string[i] <- NA
}
}
string
string
string <- na.omit(string)
string
b <- nchar(string)
for (i in 1:length(b)){
if (b[i]==1){
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
string <- na.omit(string)
string
c <- str_detect(string, pattern = "!|~|#|%|&")
for (i in 1:length(c)){
if (c[i]==TRUE) {
string[i] <- NA
} else {
string[i] <- paste(string[i])
}
}
num_tag <- na.omit(string)
num_tag
summary(num_tag)
d <- str_detect(subset, "\\#")
hash <- character(length(subset))
hash[i] <- NA
if (a[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
for (i in 1:length(a)) {
if (a[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
hash
hash <- na.omit(hash)
hash
d
subset
length(d)
hash[i] <- NA
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
hash
hash <- na.omit(hash)
hash
e <- nchar(hash)
if (e[i]<=4){
hash[i] <- NA
} else {
hash[i] <- paste(string[i])
}
if (e[i]<==4){
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(string[i])
}
for (i in 1:length(e)){
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(string[i])
}
}
hash[i] <- paste(hash[i])
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
for (i in 1:length(e)){
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
}
string <- na.omit(string)
hash <- na.omit(hash)
hash
e <- nchar(hash)
for (i in 1:length(e)){
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
}
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
hash
hash <- na.omit(hash)
e <- nchar(hash)
for (i in 1:length(e)){
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
}
hash <- na.omit(hash)
hash
c <- str_detect(hash, pattern = "!|~|@|%|&")
f <- str_detect(hash, pattern = "!|~|@|%|&")
for (i in 1:length(f)){
if (f[i]==TRUE) {
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
}
num_hash <- na.omit(hash)
summary(num_hash) #19985 mentions
f
f <- str_detect(hash, pattern = "!")
f <- str_detect(hash, pattern = "!|~|@|%|&")
f <- str_detect(hash, pattern = "!|~|@|%|&")
hash <- na.omit(hash)
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
d <- str_detect(subset, "\\#")
hash <- character(length(subset))
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
hash
hash
hash <- na.omit(hash)
e <- nchar(hash)
for (i in 1:length(e)){
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
}
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
d <- str_detect(subset, "\\#")
hash <- character(length(subset))
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
d <- str_detect(subset, "\\#")
hash <- character(length(subset))
for (i in 1:length(d)) {
if (d[i]==TRUE) {
hash[i] <- paste(subset[i])
} else {
hash[i] <- NA
}
}
hash
hash <- na.omit(hash)
e <- nchar(hash)
for (i in 1:length(e)){
if (e[i]<4){
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
}
hash <- na.omit(hash)
f <- str_detect(hash, pattern = "!|~|@|%|&")
for (i in 1:length(f)){
if (f[i]==TRUE) {
hash[i] <- NA
} else {
hash[i] <- paste(hash[i])
}
}
num_hash <- na.omit(hash)
summary(num_hash) #19985 mentions
hash
hash <- na.omit(hash)
hash
